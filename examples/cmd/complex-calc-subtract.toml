bin.name = "complex"
args = ["calculator", "subtract", "10", "2"]
status.code = 1
stdout = """
>> Hello world! CommonOpts { debug: 0 }, color: None, database: Database { _data: \"Loads of data\" }, verbosity: Error
>> Calculator: Calculator { color: false, operation: Subtract(SubtractOpts { num1: 10, num2: 2 }) }
"""
stderr = """
[[..] TRACE cling] Skipping `CliOpts.use_me` because `bool` doesn't implement `CliParam`
[[..] DEBUG cling] Collecting type `clap_verbosity_flag :: Verbosity` from `CliOpts.verbosity` because it's marked with `#[cling(collect)]`. This can be extracted with cling::prelude::Collected<T> at runtime.
[[..] DEBUG cling] Collecting type `Option < Vec < Colors > >` from `CliOpts.colors` because it derives `CliParam`
[[..] DEBUG cling] Collecting type `CommonOpts` from `CliOpts.common` because it derives `CliParam`
[[..] DEBUG cling] Running handler `init` of type `CliOpts`
[[..] TRACE cling] Skipping `Calculator.color` because `bool` doesn't implement `CliParam`
[[..] DEBUG cling] Running handler `run_calc` of type `Calculator`
[[..] TRACE cling] Skipping `SubtractOpts.num1` because `u64` doesn't implement `CliParam`
[[..] TRACE cling] Skipping `SubtractOpts.num2` because `u64` doesn't implement `CliParam`
[[..] DEBUG cling] Running handler `run_subtract` of type `SubtractOpts`


** Cling Handler Design Error **

In `complex::run_subtract`: Type `&complex::AddOpts` was not collected from input arguments. Possible reasons:
   - The type doesn't implement `CliParam` (add derive(CliParam))
   - The struct field wasn't marked with `#[cling(collect)]`
   - The type is not a field in any type leading to this command
   - The type is defined with Option<T> or Vec<T> and you used T, or vice versa

   Those are the types that have been collected: [
    \"cling::extractors::Collected<clap_verbosity_flag::Verbosity>\",
    \"cling::extractors::State<complex::Database>\",
    \"complex::Calculator\",
    \"complex::CliOpts\",
    \"complex::CommonOpts\",
    \"core::option::Option<alloc::vec::Vec<complex::Colors>>\",
]
   
"""

[env.add]
TERM = "dumb"
RUST_LOG = "trace"
